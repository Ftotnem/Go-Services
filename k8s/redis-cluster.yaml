---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-cluster-config
  namespace: minecraft-cluster
data:
  redis.conf: |
    # Basic Redis configuration for cluster
    port 6379
    cluster-enabled yes
    cluster-config-file nodes.conf
    cluster-node-timeout 5000
    appendonly yes
    protected-mode no
    # The actual cluster-announce-hostname, -port, and -bus-port will be set
    # via the StatefulSet's args, which allows using environment variables.
    # This ConfigMap provides the base configuration.
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster
  namespace: minecraft-cluster
  labels:
    app: redis-cluster
spec:
  clusterIP: None # Headless Service for stable network identities
  ports:
  - port: 6379
    name: client
  - port: 16379
    name: gossip
  selector:
    app: redis-cluster
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
  namespace: minecraft-cluster
spec:
  serviceName: "redis-cluster"
  replicas: 6
  selector:
    matchLabels:
      app: redis-cluster
  template:
    metadata:
      labels:
        app: redis-cluster
    spec:
      containers:
      - name: redis
        image: redis:6.2.6 # Using a stable Redis version. Adjust if you use a different one.
        command: ["redis-server"]
        args:
          - "/etc/redis/redis.conf" # Load base config from ConfigMap
          - "--bind"
          - "0.0.0.0" # Listen on all interfaces
          - "--port"
          - "6379"
          # IMPORTANT: These arguments tell Redis to advertise its stable hostname
          # instead of its ephemeral IP. This is crucial for Kubernetes environments.
          - "--cluster-announce-hostname"
          - "$(POD_NAME).redis-cluster.minecraft-cluster.svc.cluster.local"
          - "--cluster-announce-port"
          - "6379"
          - "--cluster-announce-bus-port"
          - "16379"
        env:
          # This environment variable captures the stable hostname of the pod
          # (e.g., redis-cluster-0, redis-cluster-1, etc.)
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        ports:
        - containerPort: 6379
          name: client
        - containerPort: 16379
          name: gossip
        volumeMounts:
        - name: redis-data
          mountPath: /data # Persistent storage for Redis data and nodes.conf
        - name: redis-config
          mountPath: /etc/redis/redis.conf # Mount the ConfigMap as a file
          subPath: redis.conf # Specify the file within the ConfigMap
      volumes:
      - name: redis-config
        configMap:
          name: redis-cluster-config # Reference the ConfigMap defined above
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ] # Or ReadWriteMany if your storage supports it
      storageClassName: standard # IMPORTANT: Ensure this StorageClass exists in your K8s cluster
      resources:
        requests:
          storage: 1Gi # Adjust storage as needed
